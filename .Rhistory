setwd("C:/work/practice/courseera/the data science toolbo")
## partial matching
mat <- list(aadvark = 1:5)
mat$a
mat[['aadvark']]
## SWIRL
install.packages("swirl")
packageVersion("swirl")
library(swirl)
install_from_swirl("R Programming")
swirl()
5 + 7
skip()
swirl()
swirl()
swirl()
5 /+ 7
5 + 7
z <- 5 + 7
x <- 5 + 7
x
y <- x - 3
y
z <- c(1.1, 9, 3.14)
?c
z
c(z, 555, z)
z*2+100
my_sqrt <- sqrt(z-1)
my_sqrt
my_div <- z / my_sqrt
my_div
c(1,2,3,4)+ c(1,10)
c(1,2,3,4)+ c(0,10)
c(1,2,3,4)+c(0,10,100)
z*2+1000
my_div
1
swirl()
getwd()
ls()
x <- 9
ls()
list.files
list.files()
?list.files
args(list.files)
old.dir <- getwd()
dir.create('testdir')
setwd("testdir")
file.create('mytest.R')
ls()
getwd()
list.files("testdir")
list.files("/testdir")
list.files(
)
file.exits("mytest.R")
file.exists("mytest.R")
file.info('mytest.R')
file.rename('mytest.R', 'mytest2.R')
file.copy('mytest2.R', 'mytest3.R')
file.path()
file.path('mytesst3.R')
file.path('mytest3.R')
file.path('folder1')
file.path('folder1', 'folder2')
?dir.create
dir.create(file.paht('testdir2', 'testdir3'), recursive = TRUE)
dir.create(file.path('testdir2', 'testdir3'), recursive = TRUE)
setwd(old.dir)
swirl()
1:20
pi:10
15:1
?':'
seq(1,20)
seq(0,10, by=0.5)
seq(5,10, length=30)
my_seq <- seq(5,10, length=30)
length(my_seq)
1:length(my_seq)
seq(along.with = my_seq)
seq_along(my_seq)
rep(0, times=40)
rep(c(0,1,2), times=40)
rep(c(0,1,2), times=10)
rep(c(0,1,2), each=10)
num_vect <- c(0.5, 55, -10, 6)
tf <- num_vect
tf <- num_vect < 1
tf
ft <- num_vect >= 6
num_vect >= 6
my_char <- c("My", "name",  "is")
my_char
paste(my_char, collapse = " ")
my_name <- c(my_char, "Jag")
my_name
paste(my_char, collapse = " ")
paste(my_name, collapse = " ")
paste("Hello", "world!", sep = " ")
paste(1:3,c('X', 'Y', 'Z'),  sep = " ")
paste(1:3,c('X', 'Y', 'Z'),  sep = "")
paste(LETTERS, 1:4, sep = "-")
x <- c(44, NA, 5, NA)
x * 3
y <- rnorm(1000)
z <- rep(NA, 1000)
my_data <- sample(c(y, z), 100)
my_na <- is.na(my_data)
my_na
my_data == NA
sum(my_na)
sum(my_data)
my_data
0 / 0
Inf - Inf
x
x[1:10]
x[is.na(x)]
y <- x[!is.na(x)]
y
y[y > 0]
x[x > 0]
x[!is.na(x) & x > 0]
c(x[3], x[5], x[7])
c(3, 5, 7)
x[c(3, 5, 7)]
x[0]
x[3000]
x[c(-2, -10)]
x[-c(2, 10)]
vect <- c(foo = 11, bar = 2, norf = NA)
vect$foo
vect
names(vect)
vect2 <- c(11, 2, NA)
names(vect2) <- c("foo", "bar", "norf")
identical(vect, vect2)
vect["bar"]
vect[c("foo", "bar")]
my_vector <- 1:20
my_vector
dim( my_vector)
length( my_vector)
dim( my_vector) <- c(4,5)
dim(my_vector)
attrubutes(my_vector)
attributes(my_vector)
my_vector
class(my_vector)
my_matrix <- my_vector
?matrix
mt_matrix2 <- matrix(1:20, 4, 5)
my_matrix2 <- matrix(1:20, 4, 5)
my_matrix2 <- matrix(1:20, nrow=4, ncol=5)
my_matrix2 <- matrix(1:20, nrow = 4, ncol = 5)
bye()
swirl()
my_matrix2 <- matrix(1:20, nrow = 4, ncol = 5)
identical(my_matrix2, my_matrix)
patients = c('Bill', 'Gina', 'Kelly', 'Sean')
patients <- c('Bill', 'Gina', 'Kelly', 'Sean')
cbind(patients, my_matrix)
my_data <- data.frame(patients, my_matrix)
my_data
class(my_data)
cnames <- c("patient", "age", "weight", "bp", "rating", "test")
colnames(my_data) <- cnames
my_dataa
my_data
x <- c(1,3, 5)
y <- c(3, 2, 10)
cbind(x, y)
class(cbind(x, y))
x <- 1:4
y <- 2:3
x+y
x <- c(17, 14, 4, 5, 13, 12, 10)
x[x>10]<-4
x
x <- c(17, 14, 4, 5, 13, 12, 10)
x[x ==4]> 10
x
hwdf <- read.csv('/r programming/quiz/dataset/hw1_data.csv')
head(hwdf)
getwd()
hwdf <- read.csv('..\r programming\quiz\dataset\hw1_data.csv')
head(hwdf)
hwdf <- read.csv('C:\work\practice\coursera\the data science toolbox\r programming\quiz\dataset\hw1_data.csv')
head(hwdf)
hwdf <- read.csv('C:/work/practice/coursera/the data science toolbox/r programming/quiz/dataset/hw1_data.csv')
head(hwdf)
length(hwdf)
countLines(hwdf)
install.packages('utils')
install.packages("utils")
install.packages('utils')
install.packages('utils')
install.packages("utils")
install.packages("utils")
install.packages("utils")
install.packages("utils")
hwdf <- read.csv('C:/work/practice/coursera/the data science toolbox/r programming/quiz/dataset/hw1_data.csv', skip=153-2)
hwdf
hwdf[27]
hwdf[27,]
hwdf <- read.csv('C:/work/practice/coursera/the data science toolbox/r programming/quiz/dataset/hw1_data.csv')
hwdf[27,]
hwdf[47,]
is.na(df['Ozone'])
is.na(hwdf['Ozone'])
table(is.na(hwdf['Ozone']))
sapply(hwdf, function(x) sum(is.na 2.6k(x)))
sapply(hwdf, function(x) sum(is.na(x)))
summar(hwdf['Ozone']))
summar(hwdf['Ozone'])
summary(hwdf['Ozone'])
args(summary)
?summary
solar<-hwdf[hwdf$Ozone >31 && hwdf$Temp>90]
summary(solar)
solar
solar<-hwdf$Ozone >31 && hwdf$Temp>90
solar
solar %>% filter(hwdf.Ozone > 31, hwdf.Temp > 90)
solar<- hwdf[hwdf$Ozone >31 && hwdf$Temp>90]
solar
summary(solar)
solar<- hwdf[hwdf$Ozone >31, hwdf$Temp>90]
solar<- hwdf[hwdf$Ozone >31 and hwdf$Temp>90]
solar<- hwdf[hwdf$Ozone >31 & hwdf$Temp>90]
solar<- hwdf[hwdf$Ozone >31 && hwdf$Temp>90,]
solar
summary(solar)
hwdf <- read.csv('C:/work/practice/coursera/the data science toolbox/r programming/quiz/dataset/hw1_data.csv')
solar<- hwdf[hwdf$Ozone >31 && hwdf$Temp>90,]
solar
solar<- hwdf[hwdf$Ozone >31 & hwdf$Temp>90,]
solar
summary(solar)
temp<- hwdf[hwdf$Month ==6,]
summary(temp)
ozone<- hwdf[hwdf$Month ==5,]
summary(temp)
summary(ozone)
